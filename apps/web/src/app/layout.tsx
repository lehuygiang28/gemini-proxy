import { Metadata } from 'next';
import { cookies } from 'next/headers';
import React, { Suspense } from 'react';
import { Refine } from '@refinedev/core';
import { useNotificationProvider } from '@refinedev/antd';
import routerProvider from '@refinedev/nextjs-router';
import {
    DashboardOutlined,
    KeyOutlined,
    SafetyCertificateOutlined,
    FileTextOutlined,
} from '@ant-design/icons';

import { AntdRegistry } from '@ant-design/nextjs-registry';
import '@refinedev/antd/dist/reset.css';
import { authProviderClient } from '@providers/auth-provider/auth-provider.client';
import { dataProvider } from '@providers/data-provider';
import { ColorModeContextProvider } from '@contexts/color-mode';

export const metadata: Metadata = {
    title: 'Refine',
    description: 'Generated by create refine app',
    icons: {
        icon: '/favicon.ico',
    },
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const cookieStore = cookies();
    const theme = cookieStore.get('theme');
    const defaultMode = theme?.value === 'dark' ? 'dark' : 'light';

    return (
        <html lang="en">
            <body>
                <Suspense>
                    <AntdRegistry>
                        <ColorModeContextProvider defaultMode={defaultMode}>
                            <Refine
                                routerProvider={routerProvider}
                                authProvider={authProviderClient}
                                dataProvider={dataProvider}
                                notificationProvider={useNotificationProvider}
                                resources={[
                                    {
                                        name: 'dashboard',
                                        list: '/dashboard',
                                        meta: {
                                            label: 'Dashboard',
                                            icon: <DashboardOutlined />,
                                        },
                                    },
                                    {
                                        name: 'api_keys',
                                        list: '/api-keys',
                                        create: '/api-keys/create',
                                        edit: '/api-keys/edit/:id',
                                        show: '/api-keys/show/:id',
                                        meta: {
                                            label: 'API Keys',
                                            icon: <KeyOutlined />,
                                        },
                                    },
                                    {
                                        name: 'proxy_api_keys',
                                        list: '/proxy-api-keys',
                                        create: '/proxy-api-keys/create',
                                        edit: '/proxy-api-keys/edit/:id',
                                        show: '/proxy-api-keys/show/:id',
                                        meta: {
                                            label: 'Proxy API Keys',
                                            icon: <SafetyCertificateOutlined />,
                                        },
                                    },
                                    {
                                        name: 'request_logs',
                                        list: '/request-logs',
                                        show: '/request-logs/show/:id',
                                        meta: {
                                            label: 'Request Logs',
                                            icon: <FileTextOutlined />,
                                        },
                                    },
                                ]}
                                options={{
                                    syncWithLocation: true,
                                    warnWhenUnsavedChanges: true,
                                    useNewQueryKeys: true,
                                    projectId: 'T9Lqmt-n4uhnL-kmcQSq',
                                }}
                            >
                                {children}
                            </Refine>
                        </ColorModeContextProvider>
                    </AntdRegistry>
                </Suspense>
            </body>
        </html>
    );
}
